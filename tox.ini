[tox]
skipsdist = True
envlist = lint_all, testenv

[testenv]
passenv =
    # postgres env vars
    POSTGRES_HOST
    POSTGRES_USER
    DBT_ENV_SECRET_POSTGRES_PASS
    POSTGRES_PORT
    POSTGRES_DATABASE
    POSTGRES_SCHEMA
    # snowflake env vars
    SNOWFLAKE_ACCOUNT
    SNOWFLAKE_USER
    DBT_ENV_SECRET_SNOWFLAKE_PASS
    SNOWFLAKE_ROLE
    SNOWFLAKE_DATABASE
    SNOWFLAKE_WAREHOUSE
    SNOWFLAKE_SCHEMA
    # redshift
    REDSHIFT_HOST
    REDSHIFT_USER
    DBT_ENV_SECRET_REDSHIFT_PASS
    REDSHIFT_DATABASE
    REDSHIFT_SCHEMA
    REDSHIFT_PORT
    # bigquery
    BIGQUERY_PROJECT
    DBT_ENV_SECRET_BIGQUERY_KEYFILE_JSON
    BIGQUERY_SCHEMA

# Uses pytest to run tests, very basic and doesn't require dbt
[testenv:dbt_integration_pytest]
changedir = {toxinidir}
allowlist_externals = pytest
deps = pytest
skip_install = true
commands =
      pytest {posargs} tests/functional

# Snowflake integration tests for centralized dbt testing
# run dbt commands directly, assumes dbt is already installed in environment
# Also adds in pytest testing.  These are very basic and don't require dbt.
# pytest runs at the root of the repo, so we need to cd out of the integration_tests directory
[testenv:dbt_integration_snowflake]
changedir = integration_tests
allowlist_externals = 
    dbt
    bash
    {[testenv:dbt_integration_pytest]allowlist_externals}
skip_install = true
deps = {[testenv:dbt_integration_pytest]deps}
commands =
    dbt --version
    dbt debug --target snowflake
    dbt deps --target snowflake
    dbt build --target snowflake --full-refresh
    bash -c "cd {toxinidir} && {[testenv:dbt_integration_pytest]commands}"


# Postgres integration tests for centralized dbt testing
# run dbt commands directly, assumes dbt is already installed in environment
[testenv:dbt_integration_postgres]
changedir = integration_tests
allowlist_externals = 
    dbt
skip_install = true
commands =
    dbt --version
    dbt debug --target postgres
    dbt deps --target postgres
    dbt build --target postgres --full-refresh

# BigQuery integration tests for centralized dbt testing
[testenv:dbt_integration_bigquery]
changedir = integration_tests
allowlist_externals = 
    dbt
skip_install = true
commands =
    dbt --version
    dbt debug --target bigquery
    dbt deps --target bigquery
    dbt build --target bigquery --full-refresh

# redshift integration tests for centralized dbt testing
[testenv:dbt_integration_redshift]
changedir = integration_tests
allowlist_externals = 
    dbt
skip_install = true
commands =
    dbt --version
    dbt debug --target redshift
    dbt deps --target redshift
    dbt build --target redshift --full-refresh